<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="campaign">
	<!-- CAMPAIGN -->
	<!-- 진행중인 캠페인 목록 불러오기 -->
	
	<!-- namespace를 여러 개 사용할 수 없을까?
	namespace를 campaign으로 바꿔야 작동.. -->
	<select id="ingList" resultType="CampaignIngVO">
		SELECT CAMPAIGN_IDX, TITLE, C_CONTENT, 
        	   GOAL, END_DATE, BASE_POINT, ESTIMATED_POINT, 
        	   C_FILE, C_CATEGORY, C_TOTPOINT, EMBLEM, USER_IDX
  		  FROM CAMPAIGN_ING WHERE STATUS = 1
  	</select>

  	
	<!-- 진행중인 캠페인 하나 불러오기 -->
  	<select id="ingOne" parameterType="int" resultType="CampaignIngVO">
  		SELECT U.NICKNAME, C.*
		  FROM USERS U, CAMPAIGN_ING C
		 WHERE U.USER_IDX = C.USER_IDX
		   AND C.CAMPAIGN_IDX = ${campaign_idx} 
  	</select>
  	
  	  	
	<!-- 한 캠페인에 참여중인 이용자 닉네임 목록 불러오기 -->
  	<select id="participant" parameterType="int" resultType="string">
  		SELECT NICKNAME FROM USERS
  		 WHERE USER_IDX IN (SELECT USER_IDX FROM CAMPAIGN_ING_USER
		 WHERE CAMPAIGN_IDX = #{campaign_idx})
  	</select>
  	
  
  	
    	<!-- 캠페인 제안 -->
  	<insert id="insert" parameterType="ProposalVO">
  		INSERT INTO PROPOSAL(PROPOSAL_IDX, GOAL, GOAL_POINT, P_CONTENT, P_TITLE, USER_IDX)
				VALUES (PROPOSAL_IDX_SEQ.nextval, #{goal}, #{goal_point}, #{p_content}, #{p_title}, #{user_idx})
  	</insert>
  	
  	<!-- 펀딩중 캠페인  -->
  	<select id="nomineeList" resultType="NomineeVO">
		SELECT NOMINEE_IDX, GOAL, TITLE, C_CONTENT, 
        	   START_TIME, END_TIME, COLLECTED_POINT, 
       		   C_FILE, C_CATEGORY, GOAL_POINT, PROPOSAL_IDX, USER_IDX 
          FROM CAMPAIGN_NOMINEE
  	</select>
  	
  	<select id="nominee" resultType="NomineeVO">
  		SELECT U.NICKNAME, N.*
		  FROM USERS U, CAMPAIGN_NOMINEE N
		 WHERE U.USER_IDX = N.USER_IDX
		   AND N.STATUS = 1
		   
		<!-- SELECT NOMINEE_IDX, GOAL, TITLE, C_CONTENT, 
        	   START_TIME, END_TIME, COLLECTED_POINT, 
        	   C_FILE, C_CATEGORY, GOAL_POINT, PROPOSAL_IDX, USER_IDX 
          FROM CAMPAIGN_NOMINEE 
         WHERE STATUS=1 -->
  	</select>
  	
  	<select id="nomUserList" parameterType="int" resultType="string">
		SELECT NICKNAME FROM USERS
  		 WHERE USER_IDX IN (SELECT USER_IDX FROM CAMPAIGN_NOM_USER
		 WHERE NOMINEE_IDX = #{nominee_idx})
  	</select>
  	
  	<insert id="nomUserInsert" parameterType="com.knock.model.vo.NomUserVO">
  		INSERT INTO CAMPAIGN_NOM_USER 
  					(USER_IDX, NOMINEE_IDX, SPENT_POINT)
  			 VALUES (#{user_idx}, #{nominee_idx}, #{spent_point})
  	</insert>
  	
  		<!-- 펀딩 참여 시, COLLECTED POINT 업데이트  -->
  	<update id="funding" parameterType="int">
		UPDATE CAMPAIGN_NOMINEE
		   SET COLLECTED_POINT = COLLECTED_POINT + #{spent_point}
		 WHERE NOMINEE_IDX = #{nominee_idx} 
  	</update>
  	
  	<select id="nomUserCheck" parameterType="com.knock.model.vo.NomUserVO" resultType="int">
		SELECT USER_IDX FROM CAMPAIGN_NOM_USER
		 WHERE USER_IDX = #{user_idx} AND NOMINEE_IDX = #{nominee_idx}
  	</select>
  	
  	<select id="kewordList" resultType="com.knock.model.vo.KeywordVO">
  		SELECT K_CONTENT FROM KEYWORD ORDER BY COUNT DESC
  	</select>
  	
  	
  </mapper>